{"mappings":"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","sources":["src/js/script.js"],"sourcesContent":["// 1) Написати програму, яка виводить числа від 1 до 10, використовуючи цикли for і while.\r\n\r\nfor (let i = 1; i <= 10; i++) {\r\n  console.log(i);\r\n}\r\n\r\nlet i = 0;\r\nwhile (i < 10) {\r\n  i++;\r\n  console.log(i);\r\n}\r\n\r\n// 2) Створити масив, що складається з елементів різних типів (примітивів) (число, рядок, булева змінна) довжиною 10 елементів.\r\n//Вивести їх тип за допомогою typeof у консоль. Виведення здійсніть за допомогою перебору масиву різними способами: методом forEach, циклами for, while і do while.\r\n\r\nconst primitiveTypeArray = [1, \"1\", true, 2, \"2\", false, 3, \"3\", true, null];\r\nconsole.log(\"Array length: \", primitiveTypeArray.length);\r\n\r\nprimitiveTypeArray.forEach((n) =>\r\n  console.log(`Value: ${n}`, \"Type:\", typeof n)\r\n);\r\n\r\nfor (let i = 0; i < primitiveTypeArray.length; i++) {\r\n  console.log(\r\n    `Value: ${primitiveTypeArray[i]}`,\r\n    \"Type:\",\r\n    typeof primitiveTypeArray[i]\r\n  );\r\n}\r\n\r\ni = 0;\r\nwhile (i < primitiveTypeArray.length) {\r\n  console.log(\r\n    `Value: ${primitiveTypeArray[i]}`,\r\n    \"Type:\",\r\n    typeof primitiveTypeArray[i]\r\n  );\r\n  i++;\r\n}\r\n\r\ni = 0;\r\ndo {\r\n  console.log(\r\n    `Value: ${primitiveTypeArray[i]}`,\r\n    \"Type:\",\r\n    typeof primitiveTypeArray[i]\r\n  );\r\n  i++;\r\n} while (i < primitiveTypeArray.length);\r\n\r\n// 3) Створити масив об'єктів (приклад об'єкта {name: ‘’, age: xx, pets: [cat, dog]})\r\n//і використати метод filter, щоб вивести всіх, кому більше 20 років.\r\n\r\nconst ownerList = [\r\n  { name: \"Alice\", age: 25, pets: [\"cat\"] },\r\n  { name: \"Bob\", age: 18, pets: [\"dog\"] },\r\n  { name: \"Charlie\", age: 30, pets: [\"parrot\", \"dog\"] },\r\n  { name: \"Diana\", age: 22, pets: [\"rabbit\"] },\r\n  { name: \"Eve\", age: 19, pets: [\"fish\"] },\r\n  { name: \"Frank\", age: 28, pets: [\"cat\", \"dog\"] },\r\n  { name: \"Grace\", age: 33, pets: [\"hamster\"] },\r\n  { name: \"Hank\", age: 21, pets: [\"snake\"] },\r\n  { name: \"Ivy\", age: 16, pets: [\"turtle\"] },\r\n  { name: \"Jack\", age: 24, pets: [\"dog\", \"cat\"] },\r\n];\r\nconsole.log(ownerList.filter((owner) => owner.age > 20));\r\n\r\n//4) За допомогою map пройтися по масиву із завдання вище та додати кожному домашню тварину. Результат вивести у консоль.\r\n\r\nownerList.map((owner) => owner.pets.push(\"New cat\"));\r\nconsole.log(ownerList)\r\n\r\n// 5) Створити масив із 10 елементів і заповнити його числом 42 за допомогою відповідного методу (завдання знайти його в документації, посилання в описі до лекції).\r\n// За допомогою splice вставити на 5-ту позицію слово \"answer\". За допомогою find знайти це слово і вивести його у консоль.\r\n\r\nconst someArr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\nsomeArr.fill(42).splice(4, 0, \"answer\");\r\n\r\nconst findingAnswer = someArr.find((el) => el === \"answer\");\r\nconsole.log(findingAnswer);\r\n\r\n//6) Створіть об'єкт із кількома ключами на ваш розсуд. І наведіть приклади використання keys, hasOwn, values.\r\n\r\nconst person = {\r\n  name: \"John\",\r\n  age: 30,\r\n  occupation: \"Software Engineer\",\r\n  hobbies: [\"reading\", \"cycling\", \"gaming\"],\r\n  city: \"New York\",\r\n  isMarried: false,\r\n  children: 2,\r\n  favoriteFood: \"pizza\",\r\n  hasDrivingLicense: true,\r\n  pets: [\"dog\", \"cat\"],\r\n};\r\n\r\nconsole.log(Object.keys(person));\r\n\r\nif (Object.hasOwn(person, \"occupation\")) {\r\n  console.log(\"Person has job\");\r\n} else {\r\n  console.log(\"Person is umemployed\");\r\n}\r\n\r\nconsole.log(Object.values(person));\r\n"],"names":[],"version":3,"file":"index.09c24910.js.map","sourceRoot":"/__parcel_source_root/"}